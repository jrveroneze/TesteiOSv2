//
//  LoginViewController.swift
//  Bank
//
//  Created by Oscar Veroneze Junior on 12/04/19.
//  Copyright (c) 2019 Junior Veroneze. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
    func success()
    func failure (alertController: UIAlertController) -> Void
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    @IBOutlet weak var textViewUser: UITextField!
    @IBOutlet weak var textViewPassword: UITextField!
    @IBOutlet weak var buttonLogin: UIButton!
    @IBOutlet weak var viewErrorBox: UIView!
    @IBOutlet weak var labelErrorMessage: UILabel!
    
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?){
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: Setup
  
    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
  
    // MARK: Routing
  
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
    // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setup()
        setButtonStyle()
        setErrorMessageStyle()
    }
    
    @IBAction func buttonLoginAction(_ sender: Any) {
        interactor?.validateFields(user: textViewUser, password: textViewPassword, errorView: viewErrorBox, errorLabel: labelErrorMessage)
    }
    
    func success() {
        
    }
    
    func failure(alertController: UIAlertController) {
        self.present(alertController, animated: true, completion: nil)
    }
  
    // MARK: Set styles element
    func setButtonStyle() {
        buttonLogin.layer.cornerRadius = 4
        buttonLogin.layer.shadowColor = #colorLiteral(red: 0.231372549, green: 0.2823529412, blue: 0.9333333333, alpha: 1)
        buttonLogin.layer.shadowOffset = CGSize(width: 0, height: 3)
        buttonLogin.layer.shadowOpacity = 0.3
        buttonLogin.layer.shadowRadius = 4
    }
    
    func setErrorMessageStyle() {
        viewErrorBox.layer.backgroundColor = #colorLiteral(red: 0.9411764706, green: 0, blue: 0, alpha: 1)
        viewErrorBox.layer.cornerRadius = 4
        labelErrorMessage.textColor = #colorLiteral(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)
    }
}
